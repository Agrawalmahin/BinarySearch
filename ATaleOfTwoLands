    import java.util.*;
    import java.io.*;
    import java.lang.*;
    //https://codeforces.com/problemset/problem/1166/C
    public class programA {
    	
    	
    	
    	public static void merge(int arr[], int l, int m, int r) 
        { 
            // Find sizes of two subarrays to be merged 
            int n1 = m - l + 1; 
            int n2 = r - m; 
      
            /* Create temp arrays */
            int L[] = new int [n1]; 
            int R[] = new int [n2]; 
      
            /*Copy data to temp arrays*/
            for (int i=0; i<n1; ++i) 
                L[i] = arr[l + i]; 
            for (int j=0; j<n2; ++j) 
                R[j] = arr[m + 1+ j]; 
      
      
            /* Merge the temp arrays */
      
            // Initial indexes of first and second subarrays 
            int i = 0, j = 0; 
      
            // Initial index of merged subarry array 
            int k = l; 
            while (i < n1 && j < n2) 
            { 
                if (L[i] <= R[j]) 
                { 
                    arr[k] = L[i]; 
                    i++; 
                } 
                else
                { 
                    arr[k] = R[j]; 
                    j++; 
                } 
                k++; 
            } 
      
            /* Copy remaining elements of L[] if any */
            while (i < n1) 
            { 
                arr[k] = L[i]; 
                i++; 
                k++; 
            } 
      
            /* Copy remaining elements of R[] if any */
            while (j < n2) 
            { 
                arr[k] = R[j]; 
                j++; 
                k++; 
            } 
        } 
      
        // Main function that sorts arr[l..r] using 
        // merge() 
    	public static void sort(int arr[], int l, int r) 
        { 
            if (l < r) 
            { 
                // Find the middle point 
                int m = (l+r)/2; 
      
                // Sort first and second halves 
                sort(arr, l, m); 
                sort(arr , m+1, r); 
      
                // Merge the sorted halves 
                merge(arr, l, m, r); 
            } 
        } 
     
    	public static void main(String[] args)throws IOException {
    		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    		StringTokenizer st = new StringTokenizer(br.readLine());
    		int n = Integer.parseInt(st.nextToken());
    		st = new StringTokenizer(br.readLine());
    		int [] arr = new int[n];
     
    		for(int i = 0;i<n;i++) {
    			arr[i]  = Math.abs(Integer.parseInt(st.nextToken()));
    		}
    		sort(arr, 0, n-1);
    		long ans=0;
    		int k = 0;
    		for(int i =0;i < n;i++) {
    			while(k<n && arr[k] <= 2*arr[i]) k++;
    			ans += k - i -1; 
    			
    		}
    		System.out.println(ans);
     
    	}
     
    }
